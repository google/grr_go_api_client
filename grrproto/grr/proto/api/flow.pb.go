// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grr/proto/api/flow.proto

/*
Package flow is a generated protocol buffer package.

It is generated from these files:
	grr/proto/api/flow.proto

It has these top-level messages:
	ApiFlowDescriptor
	ApiFlow
	ApiFlowRequest
	ApiFlowResult
	ApiGetFlowArgs
	ApiCreateFlowArgs
	ApiCancelFlowArgs
	ApiListFlowRequestsArgs
	ApiListFlowRequestsResult
	ApiListFlowResultsArgs
	ApiListFlowResultsResult
	ApiListFlowLogsArgs
	ApiListFlowLogsResult
	ApiGetFlowResultsExportCommandArgs
	ApiGetFlowResultsExportCommandResult
	ApiListFlowOutputPluginsArgs
	ApiListFlowOutputPluginsResult
	ApiListFlowOutputPluginLogsArgs
	ApiListFlowOutputPluginLogsResult
	ApiListFlowOutputPluginErrorsArgs
	ApiListFlowOutputPluginErrorsResult
	ApiGetFlowFilesArchiveArgs
	ApiListFlowDescriptorsArgs
	ApiListFlowDescriptorsResult
	ApiListFlowsArgs
	ApiListFlowsResult
	ApiGetExportedFlowResultsArgs
	ApiStartRobotGetFilesOperationArgs
	ApiStartRobotGetFilesOperationResult
	ApiGetRobotGetFilesOperationStateArgs
	ApiGetRobotGetFilesOperationStateResult
*/
package flow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import output_plugin1 "github.com/google/grr_go_api_client/grrproto/grr/proto/api/output_plugin_proto"
import _ "github.com/google/grr_go_api_client/grrproto/grr/proto/api/reflection_proto"
import api_utils "github.com/google/grr_go_api_client/grrproto/grr/proto/api_utils_proto"
import jobs "github.com/google/grr_go_api_client/grrproto/grr/proto/jobs_proto"
import flows "github.com/google/grr_go_api_client/grrproto/grr/proto/flows_proto"
import output_plugin "github.com/google/grr_go_api_client/grrproto/grr/proto/output_plugin_proto"
import _ "github.com/google/grr_go_api_client/grrproto/grr/proto/semantic_proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Enum values here correspond to Flow.State values.
type ApiFlow_State int32

const (
	ApiFlow_RUNNING        ApiFlow_State = 0
	ApiFlow_TERMINATED     ApiFlow_State = 1
	ApiFlow_ERROR          ApiFlow_State = 3
	ApiFlow_CLIENT_CRASHED ApiFlow_State = 4
)

var ApiFlow_State_name = map[int32]string{
	0: "RUNNING",
	1: "TERMINATED",
	3: "ERROR",
	4: "CLIENT_CRASHED",
}
var ApiFlow_State_value = map[string]int32{
	"RUNNING":        0,
	"TERMINATED":     1,
	"ERROR":          3,
	"CLIENT_CRASHED": 4,
}

func (x ApiFlow_State) Enum() *ApiFlow_State {
	p := new(ApiFlow_State)
	*p = x
	return p
}
func (x ApiFlow_State) String() string {
	return proto.EnumName(ApiFlow_State_name, int32(x))
}
func (x *ApiFlow_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ApiFlow_State_value, data, "ApiFlow_State")
	if err != nil {
		return err
	}
	*x = ApiFlow_State(value)
	return nil
}
func (ApiFlow_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type ApiGetFlowFilesArchiveArgs_ArchiveFormat int32

const (
	ApiGetFlowFilesArchiveArgs_ZIP    ApiGetFlowFilesArchiveArgs_ArchiveFormat = 0
	ApiGetFlowFilesArchiveArgs_TAR_GZ ApiGetFlowFilesArchiveArgs_ArchiveFormat = 1
)

var ApiGetFlowFilesArchiveArgs_ArchiveFormat_name = map[int32]string{
	0: "ZIP",
	1: "TAR_GZ",
}
var ApiGetFlowFilesArchiveArgs_ArchiveFormat_value = map[string]int32{
	"ZIP":    0,
	"TAR_GZ": 1,
}

func (x ApiGetFlowFilesArchiveArgs_ArchiveFormat) Enum() *ApiGetFlowFilesArchiveArgs_ArchiveFormat {
	p := new(ApiGetFlowFilesArchiveArgs_ArchiveFormat)
	*p = x
	return p
}
func (x ApiGetFlowFilesArchiveArgs_ArchiveFormat) String() string {
	return proto.EnumName(ApiGetFlowFilesArchiveArgs_ArchiveFormat_name, int32(x))
}
func (x *ApiGetFlowFilesArchiveArgs_ArchiveFormat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ApiGetFlowFilesArchiveArgs_ArchiveFormat_value, data, "ApiGetFlowFilesArchiveArgs_ArchiveFormat")
	if err != nil {
		return err
	}
	*x = ApiGetFlowFilesArchiveArgs_ArchiveFormat(value)
	return nil
}
func (ApiGetFlowFilesArchiveArgs_ArchiveFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{21, 0}
}

type ApiListFlowDescriptorsArgs_FlowType int32

const (
	ApiListFlowDescriptorsArgs_CLIENT ApiListFlowDescriptorsArgs_FlowType = 0
	ApiListFlowDescriptorsArgs_GLOBAL ApiListFlowDescriptorsArgs_FlowType = 1
)

var ApiListFlowDescriptorsArgs_FlowType_name = map[int32]string{
	0: "CLIENT",
	1: "GLOBAL",
}
var ApiListFlowDescriptorsArgs_FlowType_value = map[string]int32{
	"CLIENT": 0,
	"GLOBAL": 1,
}

func (x ApiListFlowDescriptorsArgs_FlowType) Enum() *ApiListFlowDescriptorsArgs_FlowType {
	p := new(ApiListFlowDescriptorsArgs_FlowType)
	*p = x
	return p
}
func (x ApiListFlowDescriptorsArgs_FlowType) String() string {
	return proto.EnumName(ApiListFlowDescriptorsArgs_FlowType_name, int32(x))
}
func (x *ApiListFlowDescriptorsArgs_FlowType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ApiListFlowDescriptorsArgs_FlowType_value, data, "ApiListFlowDescriptorsArgs_FlowType")
	if err != nil {
		return err
	}
	*x = ApiListFlowDescriptorsArgs_FlowType(value)
	return nil
}
func (ApiListFlowDescriptorsArgs_FlowType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{22, 0}
}

type ApiFlowDescriptor struct {
	Name             *string              `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	FriendlyName     *string              `protobuf:"bytes,2,opt,name=friendly_name,json=friendlyName" json:"friendly_name,omitempty"`
	Category         *string              `protobuf:"bytes,3,opt,name=category" json:"category,omitempty"`
	Doc              *string              `protobuf:"bytes,4,opt,name=doc" json:"doc,omitempty"`
	ArgsType         *string              `protobuf:"bytes,5,opt,name=args_type,json=argsType" json:"args_type,omitempty"`
	DefaultArgs      *google_protobuf.Any `protobuf:"bytes,6,opt,name=default_args,json=defaultArgs" json:"default_args,omitempty"`
	Behaviours       []string             `protobuf:"bytes,7,rep,name=behaviours" json:"behaviours,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ApiFlowDescriptor) Reset()                    { *m = ApiFlowDescriptor{} }
func (m *ApiFlowDescriptor) String() string            { return proto.CompactTextString(m) }
func (*ApiFlowDescriptor) ProtoMessage()               {}
func (*ApiFlowDescriptor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ApiFlowDescriptor) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ApiFlowDescriptor) GetFriendlyName() string {
	if m != nil && m.FriendlyName != nil {
		return *m.FriendlyName
	}
	return ""
}

func (m *ApiFlowDescriptor) GetCategory() string {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return ""
}

func (m *ApiFlowDescriptor) GetDoc() string {
	if m != nil && m.Doc != nil {
		return *m.Doc
	}
	return ""
}

func (m *ApiFlowDescriptor) GetArgsType() string {
	if m != nil && m.ArgsType != nil {
		return *m.ArgsType
	}
	return ""
}

func (m *ApiFlowDescriptor) GetDefaultArgs() *google_protobuf.Any {
	if m != nil {
		return m.DefaultArgs
	}
	return nil
}

func (m *ApiFlowDescriptor) GetBehaviours() []string {
	if m != nil {
		return m.Behaviours
	}
	return nil
}

// Next id: 13
type ApiFlow struct {
	Urn              *string                  `protobuf:"bytes,1,opt,name=urn" json:"urn,omitempty"`
	FlowId           *string                  `protobuf:"bytes,12,opt,name=flow_id,json=flowId" json:"flow_id,omitempty"`
	Name             *string                  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Args             *google_protobuf.Any     `protobuf:"bytes,3,opt,name=args" json:"args,omitempty"`
	RunnerArgs       *flows.FlowRunnerArgs    `protobuf:"bytes,4,opt,name=runner_args,json=runnerArgs" json:"runner_args,omitempty"`
	State            *ApiFlow_State           `protobuf:"varint,5,opt,name=state,enum=ApiFlow_State" json:"state,omitempty"`
	StartedAt        *uint64                  `protobuf:"varint,6,opt,name=started_at,json=startedAt" json:"started_at,omitempty"`
	LastActiveAt     *uint64                  `protobuf:"varint,7,opt,name=last_active_at,json=lastActiveAt" json:"last_active_at,omitempty"`
	Creator          *string                  `protobuf:"bytes,8,opt,name=creator" json:"creator,omitempty"`
	StateData        *api_utils.ApiDataObject `protobuf:"bytes,10,opt,name=state_data,json=stateData" json:"state_data,omitempty"`
	Context          *flows.FlowContext       `protobuf:"bytes,11,opt,name=context" json:"context,omitempty"`
	NestedFlows      []*ApiFlow               `protobuf:"bytes,9,rep,name=nested_flows,json=nestedFlows" json:"nested_flows,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *ApiFlow) Reset()                    { *m = ApiFlow{} }
func (m *ApiFlow) String() string            { return proto.CompactTextString(m) }
func (*ApiFlow) ProtoMessage()               {}
func (*ApiFlow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ApiFlow) GetUrn() string {
	if m != nil && m.Urn != nil {
		return *m.Urn
	}
	return ""
}

func (m *ApiFlow) GetFlowId() string {
	if m != nil && m.FlowId != nil {
		return *m.FlowId
	}
	return ""
}

func (m *ApiFlow) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ApiFlow) GetArgs() *google_protobuf.Any {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *ApiFlow) GetRunnerArgs() *flows.FlowRunnerArgs {
	if m != nil {
		return m.RunnerArgs
	}
	return nil
}

func (m *ApiFlow) GetState() ApiFlow_State {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ApiFlow_RUNNING
}

func (m *ApiFlow) GetStartedAt() uint64 {
	if m != nil && m.StartedAt != nil {
		return *m.StartedAt
	}
	return 0
}

func (m *ApiFlow) GetLastActiveAt() uint64 {
	if m != nil && m.LastActiveAt != nil {
		return *m.LastActiveAt
	}
	return 0
}

func (m *ApiFlow) GetCreator() string {
	if m != nil && m.Creator != nil {
		return *m.Creator
	}
	return ""
}

func (m *ApiFlow) GetStateData() *api_utils.ApiDataObject {
	if m != nil {
		return m.StateData
	}
	return nil
}

func (m *ApiFlow) GetContext() *flows.FlowContext {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *ApiFlow) GetNestedFlows() []*ApiFlow {
	if m != nil {
		return m.NestedFlows
	}
	return nil
}

type ApiFlowRequest struct {
	RequestId        *string            `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	RequestState     *jobs.RequestState `protobuf:"bytes,2,opt,name=request_state,json=requestState" json:"request_state,omitempty"`
	Responses        []*jobs.GrrMessage `protobuf:"bytes,3,rep,name=responses" json:"responses,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ApiFlowRequest) Reset()                    { *m = ApiFlowRequest{} }
func (m *ApiFlowRequest) String() string            { return proto.CompactTextString(m) }
func (*ApiFlowRequest) ProtoMessage()               {}
func (*ApiFlowRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ApiFlowRequest) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *ApiFlowRequest) GetRequestState() *jobs.RequestState {
	if m != nil {
		return m.RequestState
	}
	return nil
}

func (m *ApiFlowRequest) GetResponses() []*jobs.GrrMessage {
	if m != nil {
		return m.Responses
	}
	return nil
}

type ApiFlowResult struct {
	Payload          *google_protobuf.Any `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
	PayloadType      *string              `protobuf:"bytes,2,opt,name=payload_type,json=payloadType" json:"payload_type,omitempty"`
	Timestamp        *uint64              `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ApiFlowResult) Reset()                    { *m = ApiFlowResult{} }
func (m *ApiFlowResult) String() string            { return proto.CompactTextString(m) }
func (*ApiFlowResult) ProtoMessage()               {}
func (*ApiFlowResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ApiFlowResult) GetPayload() *google_protobuf.Any {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *ApiFlowResult) GetPayloadType() string {
	if m != nil && m.PayloadType != nil {
		return *m.PayloadType
	}
	return ""
}

func (m *ApiFlowResult) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type ApiGetFlowArgs struct {
	ClientId         *string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FlowId           *string `protobuf:"bytes,2,opt,name=flow_id,json=flowId" json:"flow_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiGetFlowArgs) Reset()                    { *m = ApiGetFlowArgs{} }
func (m *ApiGetFlowArgs) String() string            { return proto.CompactTextString(m) }
func (*ApiGetFlowArgs) ProtoMessage()               {}
func (*ApiGetFlowArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ApiGetFlowArgs) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ApiGetFlowArgs) GetFlowId() string {
	if m != nil && m.FlowId != nil {
		return *m.FlowId
	}
	return ""
}

type ApiCreateFlowArgs struct {
	ClientId         *string  `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Flow             *ApiFlow `protobuf:"bytes,2,opt,name=flow" json:"flow,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ApiCreateFlowArgs) Reset()                    { *m = ApiCreateFlowArgs{} }
func (m *ApiCreateFlowArgs) String() string            { return proto.CompactTextString(m) }
func (*ApiCreateFlowArgs) ProtoMessage()               {}
func (*ApiCreateFlowArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ApiCreateFlowArgs) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ApiCreateFlowArgs) GetFlow() *ApiFlow {
	if m != nil {
		return m.Flow
	}
	return nil
}

type ApiCancelFlowArgs struct {
	ClientId         *string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FlowId           *string `protobuf:"bytes,2,opt,name=flow_id,json=flowId" json:"flow_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiCancelFlowArgs) Reset()                    { *m = ApiCancelFlowArgs{} }
func (m *ApiCancelFlowArgs) String() string            { return proto.CompactTextString(m) }
func (*ApiCancelFlowArgs) ProtoMessage()               {}
func (*ApiCancelFlowArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ApiCancelFlowArgs) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ApiCancelFlowArgs) GetFlowId() string {
	if m != nil && m.FlowId != nil {
		return *m.FlowId
	}
	return ""
}

type ApiListFlowRequestsArgs struct {
	ClientId         *string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FlowId           *string `protobuf:"bytes,2,opt,name=flow_id,json=flowId" json:"flow_id,omitempty"`
	Offset           *int64  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Count            *int64  `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiListFlowRequestsArgs) Reset()                    { *m = ApiListFlowRequestsArgs{} }
func (m *ApiListFlowRequestsArgs) String() string            { return proto.CompactTextString(m) }
func (*ApiListFlowRequestsArgs) ProtoMessage()               {}
func (*ApiListFlowRequestsArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ApiListFlowRequestsArgs) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ApiListFlowRequestsArgs) GetFlowId() string {
	if m != nil && m.FlowId != nil {
		return *m.FlowId
	}
	return ""
}

func (m *ApiListFlowRequestsArgs) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ApiListFlowRequestsArgs) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type ApiListFlowRequestsResult struct {
	Items            []*ApiFlowRequest `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ApiListFlowRequestsResult) Reset()                    { *m = ApiListFlowRequestsResult{} }
func (m *ApiListFlowRequestsResult) String() string            { return proto.CompactTextString(m) }
func (*ApiListFlowRequestsResult) ProtoMessage()               {}
func (*ApiListFlowRequestsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ApiListFlowRequestsResult) GetItems() []*ApiFlowRequest {
	if m != nil {
		return m.Items
	}
	return nil
}

type ApiListFlowResultsArgs struct {
	ClientId         *string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FlowId           *string `protobuf:"bytes,2,opt,name=flow_id,json=flowId" json:"flow_id,omitempty"`
	Offset           *int64  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Count            *int64  `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Filter           *string `protobuf:"bytes,5,opt,name=filter" json:"filter,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiListFlowResultsArgs) Reset()                    { *m = ApiListFlowResultsArgs{} }
func (m *ApiListFlowResultsArgs) String() string            { return proto.CompactTextString(m) }
func (*ApiListFlowResultsArgs) ProtoMessage()               {}
func (*ApiListFlowResultsArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ApiListFlowResultsArgs) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ApiListFlowResultsArgs) GetFlowId() string {
	if m != nil && m.FlowId != nil {
		return *m.FlowId
	}
	return ""
}

func (m *ApiListFlowResultsArgs) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ApiListFlowResultsArgs) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *ApiListFlowResultsArgs) GetFilter() string {
	if m != nil && m.Filter != nil {
		return *m.Filter
	}
	return ""
}

type ApiListFlowResultsResult struct {
	Items            []*ApiFlowResult `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	TotalCount       *int64           `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ApiListFlowResultsResult) Reset()                    { *m = ApiListFlowResultsResult{} }
func (m *ApiListFlowResultsResult) String() string            { return proto.CompactTextString(m) }
func (*ApiListFlowResultsResult) ProtoMessage()               {}
func (*ApiListFlowResultsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ApiListFlowResultsResult) GetItems() []*ApiFlowResult {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ApiListFlowResultsResult) GetTotalCount() int64 {
	if m != nil && m.TotalCount != nil {
		return *m.TotalCount
	}
	return 0
}

type ApiListFlowLogsArgs struct {
	ClientId         *string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FlowId           *string `protobuf:"bytes,2,opt,name=flow_id,json=flowId" json:"flow_id,omitempty"`
	Offset           *int64  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Count            *int64  `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Filter           *string `protobuf:"bytes,5,opt,name=filter" json:"filter,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiListFlowLogsArgs) Reset()                    { *m = ApiListFlowLogsArgs{} }
func (m *ApiListFlowLogsArgs) String() string            { return proto.CompactTextString(m) }
func (*ApiListFlowLogsArgs) ProtoMessage()               {}
func (*ApiListFlowLogsArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ApiListFlowLogsArgs) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ApiListFlowLogsArgs) GetFlowId() string {
	if m != nil && m.FlowId != nil {
		return *m.FlowId
	}
	return ""
}

func (m *ApiListFlowLogsArgs) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ApiListFlowLogsArgs) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *ApiListFlowLogsArgs) GetFilter() string {
	if m != nil && m.Filter != nil {
		return *m.Filter
	}
	return ""
}

type ApiListFlowLogsResult struct {
	Items            []*jobs.FlowLog `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	TotalCount       *int64          `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ApiListFlowLogsResult) Reset()                    { *m = ApiListFlowLogsResult{} }
func (m *ApiListFlowLogsResult) String() string            { return proto.CompactTextString(m) }
func (*ApiListFlowLogsResult) ProtoMessage()               {}
func (*ApiListFlowLogsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ApiListFlowLogsResult) GetItems() []*jobs.FlowLog {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ApiListFlowLogsResult) GetTotalCount() int64 {
	if m != nil && m.TotalCount != nil {
		return *m.TotalCount
	}
	return 0
}

type ApiGetFlowResultsExportCommandArgs struct {
	ClientId         *string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FlowId           *string `protobuf:"bytes,2,opt,name=flow_id,json=flowId" json:"flow_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiGetFlowResultsExportCommandArgs) Reset()         { *m = ApiGetFlowResultsExportCommandArgs{} }
func (m *ApiGetFlowResultsExportCommandArgs) String() string { return proto.CompactTextString(m) }
func (*ApiGetFlowResultsExportCommandArgs) ProtoMessage()    {}
func (*ApiGetFlowResultsExportCommandArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{13}
}

func (m *ApiGetFlowResultsExportCommandArgs) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ApiGetFlowResultsExportCommandArgs) GetFlowId() string {
	if m != nil && m.FlowId != nil {
		return *m.FlowId
	}
	return ""
}

type ApiGetFlowResultsExportCommandResult struct {
	Command          *string `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiGetFlowResultsExportCommandResult) Reset()         { *m = ApiGetFlowResultsExportCommandResult{} }
func (m *ApiGetFlowResultsExportCommandResult) String() string { return proto.CompactTextString(m) }
func (*ApiGetFlowResultsExportCommandResult) ProtoMessage()    {}
func (*ApiGetFlowResultsExportCommandResult) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{14}
}

func (m *ApiGetFlowResultsExportCommandResult) GetCommand() string {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return ""
}

type ApiListFlowOutputPluginsArgs struct {
	ClientId         *string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FlowId           *string `protobuf:"bytes,2,opt,name=flow_id,json=flowId" json:"flow_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiListFlowOutputPluginsArgs) Reset()                    { *m = ApiListFlowOutputPluginsArgs{} }
func (m *ApiListFlowOutputPluginsArgs) String() string            { return proto.CompactTextString(m) }
func (*ApiListFlowOutputPluginsArgs) ProtoMessage()               {}
func (*ApiListFlowOutputPluginsArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ApiListFlowOutputPluginsArgs) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ApiListFlowOutputPluginsArgs) GetFlowId() string {
	if m != nil && m.FlowId != nil {
		return *m.FlowId
	}
	return ""
}

type ApiListFlowOutputPluginsResult struct {
	Items            []*output_plugin1.ApiOutputPlugin `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *ApiListFlowOutputPluginsResult) Reset()                    { *m = ApiListFlowOutputPluginsResult{} }
func (m *ApiListFlowOutputPluginsResult) String() string            { return proto.CompactTextString(m) }
func (*ApiListFlowOutputPluginsResult) ProtoMessage()               {}
func (*ApiListFlowOutputPluginsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ApiListFlowOutputPluginsResult) GetItems() []*output_plugin1.ApiOutputPlugin {
	if m != nil {
		return m.Items
	}
	return nil
}

type ApiListFlowOutputPluginLogsArgs struct {
	ClientId         *string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FlowId           *string `protobuf:"bytes,2,opt,name=flow_id,json=flowId" json:"flow_id,omitempty"`
	PluginId         *string `protobuf:"bytes,3,opt,name=plugin_id,json=pluginId" json:"plugin_id,omitempty"`
	Offset           *int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	Count            *int64  `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiListFlowOutputPluginLogsArgs) Reset()         { *m = ApiListFlowOutputPluginLogsArgs{} }
func (m *ApiListFlowOutputPluginLogsArgs) String() string { return proto.CompactTextString(m) }
func (*ApiListFlowOutputPluginLogsArgs) ProtoMessage()    {}
func (*ApiListFlowOutputPluginLogsArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{17}
}

func (m *ApiListFlowOutputPluginLogsArgs) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ApiListFlowOutputPluginLogsArgs) GetFlowId() string {
	if m != nil && m.FlowId != nil {
		return *m.FlowId
	}
	return ""
}

func (m *ApiListFlowOutputPluginLogsArgs) GetPluginId() string {
	if m != nil && m.PluginId != nil {
		return *m.PluginId
	}
	return ""
}

func (m *ApiListFlowOutputPluginLogsArgs) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ApiListFlowOutputPluginLogsArgs) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type ApiListFlowOutputPluginLogsResult struct {
	Items            []*output_plugin.OutputPluginBatchProcessingStatus `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	TotalCount       *int64                                             `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	XXX_unrecognized []byte                                             `json:"-"`
}

func (m *ApiListFlowOutputPluginLogsResult) Reset()         { *m = ApiListFlowOutputPluginLogsResult{} }
func (m *ApiListFlowOutputPluginLogsResult) String() string { return proto.CompactTextString(m) }
func (*ApiListFlowOutputPluginLogsResult) ProtoMessage()    {}
func (*ApiListFlowOutputPluginLogsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{18}
}

func (m *ApiListFlowOutputPluginLogsResult) GetItems() []*output_plugin.OutputPluginBatchProcessingStatus {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ApiListFlowOutputPluginLogsResult) GetTotalCount() int64 {
	if m != nil && m.TotalCount != nil {
		return *m.TotalCount
	}
	return 0
}

type ApiListFlowOutputPluginErrorsArgs struct {
	ClientId         *string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FlowId           *string `protobuf:"bytes,2,opt,name=flow_id,json=flowId" json:"flow_id,omitempty"`
	PluginId         *string `protobuf:"bytes,3,opt,name=plugin_id,json=pluginId" json:"plugin_id,omitempty"`
	Offset           *int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	Count            *int64  `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiListFlowOutputPluginErrorsArgs) Reset()         { *m = ApiListFlowOutputPluginErrorsArgs{} }
func (m *ApiListFlowOutputPluginErrorsArgs) String() string { return proto.CompactTextString(m) }
func (*ApiListFlowOutputPluginErrorsArgs) ProtoMessage()    {}
func (*ApiListFlowOutputPluginErrorsArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{19}
}

func (m *ApiListFlowOutputPluginErrorsArgs) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ApiListFlowOutputPluginErrorsArgs) GetFlowId() string {
	if m != nil && m.FlowId != nil {
		return *m.FlowId
	}
	return ""
}

func (m *ApiListFlowOutputPluginErrorsArgs) GetPluginId() string {
	if m != nil && m.PluginId != nil {
		return *m.PluginId
	}
	return ""
}

func (m *ApiListFlowOutputPluginErrorsArgs) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ApiListFlowOutputPluginErrorsArgs) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type ApiListFlowOutputPluginErrorsResult struct {
	Items            []*output_plugin.OutputPluginBatchProcessingStatus `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	TotalCount       *int64                                             `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	XXX_unrecognized []byte                                             `json:"-"`
}

func (m *ApiListFlowOutputPluginErrorsResult) Reset()         { *m = ApiListFlowOutputPluginErrorsResult{} }
func (m *ApiListFlowOutputPluginErrorsResult) String() string { return proto.CompactTextString(m) }
func (*ApiListFlowOutputPluginErrorsResult) ProtoMessage()    {}
func (*ApiListFlowOutputPluginErrorsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{20}
}

func (m *ApiListFlowOutputPluginErrorsResult) GetItems() []*output_plugin.OutputPluginBatchProcessingStatus {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ApiListFlowOutputPluginErrorsResult) GetTotalCount() int64 {
	if m != nil && m.TotalCount != nil {
		return *m.TotalCount
	}
	return 0
}

type ApiGetFlowFilesArchiveArgs struct {
	ClientId         *string                                   `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FlowId           *string                                   `protobuf:"bytes,2,opt,name=flow_id,json=flowId" json:"flow_id,omitempty"`
	ArchiveFormat    *ApiGetFlowFilesArchiveArgs_ArchiveFormat `protobuf:"varint,3,opt,name=archive_format,json=archiveFormat,enum=ApiGetFlowFilesArchiveArgs_ArchiveFormat" json:"archive_format,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *ApiGetFlowFilesArchiveArgs) Reset()                    { *m = ApiGetFlowFilesArchiveArgs{} }
func (m *ApiGetFlowFilesArchiveArgs) String() string            { return proto.CompactTextString(m) }
func (*ApiGetFlowFilesArchiveArgs) ProtoMessage()               {}
func (*ApiGetFlowFilesArchiveArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ApiGetFlowFilesArchiveArgs) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ApiGetFlowFilesArchiveArgs) GetFlowId() string {
	if m != nil && m.FlowId != nil {
		return *m.FlowId
	}
	return ""
}

func (m *ApiGetFlowFilesArchiveArgs) GetArchiveFormat() ApiGetFlowFilesArchiveArgs_ArchiveFormat {
	if m != nil && m.ArchiveFormat != nil {
		return *m.ArchiveFormat
	}
	return ApiGetFlowFilesArchiveArgs_ZIP
}

type ApiListFlowDescriptorsArgs struct {
	FlowType         *ApiListFlowDescriptorsArgs_FlowType `protobuf:"varint,1,opt,name=flow_type,json=flowType,enum=ApiListFlowDescriptorsArgs_FlowType" json:"flow_type,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *ApiListFlowDescriptorsArgs) Reset()                    { *m = ApiListFlowDescriptorsArgs{} }
func (m *ApiListFlowDescriptorsArgs) String() string            { return proto.CompactTextString(m) }
func (*ApiListFlowDescriptorsArgs) ProtoMessage()               {}
func (*ApiListFlowDescriptorsArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ApiListFlowDescriptorsArgs) GetFlowType() ApiListFlowDescriptorsArgs_FlowType {
	if m != nil && m.FlowType != nil {
		return *m.FlowType
	}
	return ApiListFlowDescriptorsArgs_CLIENT
}

type ApiListFlowDescriptorsResult struct {
	Items            []*ApiFlowDescriptor `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ApiListFlowDescriptorsResult) Reset()                    { *m = ApiListFlowDescriptorsResult{} }
func (m *ApiListFlowDescriptorsResult) String() string            { return proto.CompactTextString(m) }
func (*ApiListFlowDescriptorsResult) ProtoMessage()               {}
func (*ApiListFlowDescriptorsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ApiListFlowDescriptorsResult) GetItems() []*ApiFlowDescriptor {
	if m != nil {
		return m.Items
	}
	return nil
}

type ApiListFlowsArgs struct {
	ClientId         *string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Offset           *int64  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Count            *int64  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiListFlowsArgs) Reset()                    { *m = ApiListFlowsArgs{} }
func (m *ApiListFlowsArgs) String() string            { return proto.CompactTextString(m) }
func (*ApiListFlowsArgs) ProtoMessage()               {}
func (*ApiListFlowsArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ApiListFlowsArgs) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ApiListFlowsArgs) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ApiListFlowsArgs) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type ApiListFlowsResult struct {
	Items            []*ApiFlow `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *ApiListFlowsResult) Reset()                    { *m = ApiListFlowsResult{} }
func (m *ApiListFlowsResult) String() string            { return proto.CompactTextString(m) }
func (*ApiListFlowsResult) ProtoMessage()               {}
func (*ApiListFlowsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ApiListFlowsResult) GetItems() []*ApiFlow {
	if m != nil {
		return m.Items
	}
	return nil
}

type ApiGetExportedFlowResultsArgs struct {
	ClientId         *string `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FlowId           *string `protobuf:"bytes,2,opt,name=flow_id,json=flowId" json:"flow_id,omitempty"`
	PluginName       *string `protobuf:"bytes,3,opt,name=plugin_name,json=pluginName" json:"plugin_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiGetExportedFlowResultsArgs) Reset()                    { *m = ApiGetExportedFlowResultsArgs{} }
func (m *ApiGetExportedFlowResultsArgs) String() string            { return proto.CompactTextString(m) }
func (*ApiGetExportedFlowResultsArgs) ProtoMessage()               {}
func (*ApiGetExportedFlowResultsArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ApiGetExportedFlowResultsArgs) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *ApiGetExportedFlowResultsArgs) GetFlowId() string {
	if m != nil && m.FlowId != nil {
		return *m.FlowId
	}
	return ""
}

func (m *ApiGetExportedFlowResultsArgs) GetPluginName() string {
	if m != nil && m.PluginName != nil {
		return *m.PluginName
	}
	return ""
}

// TODO(user): deprecate legacy robot get file API.
type ApiStartRobotGetFilesOperationArgs struct {
	Hostname         *string                        `protobuf:"bytes,1,opt,name=hostname" json:"hostname,omitempty"`
	Paths            []string                       `protobuf:"bytes,2,rep,name=paths" json:"paths,omitempty"`
	MaxFileSize      *uint64                        `protobuf:"varint,3,opt,name=max_file_size,json=maxFileSize,def=20000000" json:"max_file_size,omitempty"`
	Action           *flows.FileFinderAction_Action `protobuf:"varint,4,opt,name=action,enum=FileFinderAction_Action,def=2" json:"action,omitempty"`
	Pathtype         *jobs.PathSpec_PathType        `protobuf:"varint,5,opt,name=pathtype,enum=PathSpec_PathType,def=0" json:"pathtype,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *ApiStartRobotGetFilesOperationArgs) Reset()         { *m = ApiStartRobotGetFilesOperationArgs{} }
func (m *ApiStartRobotGetFilesOperationArgs) String() string { return proto.CompactTextString(m) }
func (*ApiStartRobotGetFilesOperationArgs) ProtoMessage()    {}
func (*ApiStartRobotGetFilesOperationArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{27}
}

const Default_ApiStartRobotGetFilesOperationArgs_MaxFileSize uint64 = 20000000
const Default_ApiStartRobotGetFilesOperationArgs_Action flows.FileFinderAction_Action = flows.FileFinderAction_DOWNLOAD
const Default_ApiStartRobotGetFilesOperationArgs_Pathtype jobs.PathSpec_PathType = jobs.PathSpec_OS

func (m *ApiStartRobotGetFilesOperationArgs) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

func (m *ApiStartRobotGetFilesOperationArgs) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *ApiStartRobotGetFilesOperationArgs) GetMaxFileSize() uint64 {
	if m != nil && m.MaxFileSize != nil {
		return *m.MaxFileSize
	}
	return Default_ApiStartRobotGetFilesOperationArgs_MaxFileSize
}

func (m *ApiStartRobotGetFilesOperationArgs) GetAction() flows.FileFinderAction_Action {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return Default_ApiStartRobotGetFilesOperationArgs_Action
}

func (m *ApiStartRobotGetFilesOperationArgs) GetPathtype() jobs.PathSpec_PathType {
	if m != nil && m.Pathtype != nil {
		return *m.Pathtype
	}
	return Default_ApiStartRobotGetFilesOperationArgs_Pathtype
}

type ApiStartRobotGetFilesOperationResult struct {
	OperationId      *string `protobuf:"bytes,1,opt,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiStartRobotGetFilesOperationResult) Reset()         { *m = ApiStartRobotGetFilesOperationResult{} }
func (m *ApiStartRobotGetFilesOperationResult) String() string { return proto.CompactTextString(m) }
func (*ApiStartRobotGetFilesOperationResult) ProtoMessage()    {}
func (*ApiStartRobotGetFilesOperationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{28}
}

func (m *ApiStartRobotGetFilesOperationResult) GetOperationId() string {
	if m != nil && m.OperationId != nil {
		return *m.OperationId
	}
	return ""
}

type ApiGetRobotGetFilesOperationStateArgs struct {
	OperationId      *string `protobuf:"bytes,1,opt,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ApiGetRobotGetFilesOperationStateArgs) Reset()         { *m = ApiGetRobotGetFilesOperationStateArgs{} }
func (m *ApiGetRobotGetFilesOperationStateArgs) String() string { return proto.CompactTextString(m) }
func (*ApiGetRobotGetFilesOperationStateArgs) ProtoMessage()    {}
func (*ApiGetRobotGetFilesOperationStateArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{29}
}

func (m *ApiGetRobotGetFilesOperationStateArgs) GetOperationId() string {
	if m != nil && m.OperationId != nil {
		return *m.OperationId
	}
	return ""
}

type ApiGetRobotGetFilesOperationStateResult struct {
	State            *ApiFlow_State `protobuf:"varint,1,opt,name=state,enum=ApiFlow_State" json:"state,omitempty"`
	ResultCount      *uint64        `protobuf:"varint,2,opt,name=result_count,json=resultCount" json:"result_count,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ApiGetRobotGetFilesOperationStateResult) Reset() {
	*m = ApiGetRobotGetFilesOperationStateResult{}
}
func (m *ApiGetRobotGetFilesOperationStateResult) String() string { return proto.CompactTextString(m) }
func (*ApiGetRobotGetFilesOperationStateResult) ProtoMessage()    {}
func (*ApiGetRobotGetFilesOperationStateResult) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{30}
}

func (m *ApiGetRobotGetFilesOperationStateResult) GetState() ApiFlow_State {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ApiFlow_RUNNING
}

func (m *ApiGetRobotGetFilesOperationStateResult) GetResultCount() uint64 {
	if m != nil && m.ResultCount != nil {
		return *m.ResultCount
	}
	return 0
}

func init() {
	proto.RegisterType((*ApiFlowDescriptor)(nil), "ApiFlowDescriptor")
	proto.RegisterType((*ApiFlow)(nil), "ApiFlow")
	proto.RegisterType((*ApiFlowRequest)(nil), "ApiFlowRequest")
	proto.RegisterType((*ApiFlowResult)(nil), "ApiFlowResult")
	proto.RegisterType((*ApiGetFlowArgs)(nil), "ApiGetFlowArgs")
	proto.RegisterType((*ApiCreateFlowArgs)(nil), "ApiCreateFlowArgs")
	proto.RegisterType((*ApiCancelFlowArgs)(nil), "ApiCancelFlowArgs")
	proto.RegisterType((*ApiListFlowRequestsArgs)(nil), "ApiListFlowRequestsArgs")
	proto.RegisterType((*ApiListFlowRequestsResult)(nil), "ApiListFlowRequestsResult")
	proto.RegisterType((*ApiListFlowResultsArgs)(nil), "ApiListFlowResultsArgs")
	proto.RegisterType((*ApiListFlowResultsResult)(nil), "ApiListFlowResultsResult")
	proto.RegisterType((*ApiListFlowLogsArgs)(nil), "ApiListFlowLogsArgs")
	proto.RegisterType((*ApiListFlowLogsResult)(nil), "ApiListFlowLogsResult")
	proto.RegisterType((*ApiGetFlowResultsExportCommandArgs)(nil), "ApiGetFlowResultsExportCommandArgs")
	proto.RegisterType((*ApiGetFlowResultsExportCommandResult)(nil), "ApiGetFlowResultsExportCommandResult")
	proto.RegisterType((*ApiListFlowOutputPluginsArgs)(nil), "ApiListFlowOutputPluginsArgs")
	proto.RegisterType((*ApiListFlowOutputPluginsResult)(nil), "ApiListFlowOutputPluginsResult")
	proto.RegisterType((*ApiListFlowOutputPluginLogsArgs)(nil), "ApiListFlowOutputPluginLogsArgs")
	proto.RegisterType((*ApiListFlowOutputPluginLogsResult)(nil), "ApiListFlowOutputPluginLogsResult")
	proto.RegisterType((*ApiListFlowOutputPluginErrorsArgs)(nil), "ApiListFlowOutputPluginErrorsArgs")
	proto.RegisterType((*ApiListFlowOutputPluginErrorsResult)(nil), "ApiListFlowOutputPluginErrorsResult")
	proto.RegisterType((*ApiGetFlowFilesArchiveArgs)(nil), "ApiGetFlowFilesArchiveArgs")
	proto.RegisterType((*ApiListFlowDescriptorsArgs)(nil), "ApiListFlowDescriptorsArgs")
	proto.RegisterType((*ApiListFlowDescriptorsResult)(nil), "ApiListFlowDescriptorsResult")
	proto.RegisterType((*ApiListFlowsArgs)(nil), "ApiListFlowsArgs")
	proto.RegisterType((*ApiListFlowsResult)(nil), "ApiListFlowsResult")
	proto.RegisterType((*ApiGetExportedFlowResultsArgs)(nil), "ApiGetExportedFlowResultsArgs")
	proto.RegisterType((*ApiStartRobotGetFilesOperationArgs)(nil), "ApiStartRobotGetFilesOperationArgs")
	proto.RegisterType((*ApiStartRobotGetFilesOperationResult)(nil), "ApiStartRobotGetFilesOperationResult")
	proto.RegisterType((*ApiGetRobotGetFilesOperationStateArgs)(nil), "ApiGetRobotGetFilesOperationStateArgs")
	proto.RegisterType((*ApiGetRobotGetFilesOperationStateResult)(nil), "ApiGetRobotGetFilesOperationStateResult")
	proto.RegisterEnum("ApiFlow_State", ApiFlow_State_name, ApiFlow_State_value)
	proto.RegisterEnum("ApiGetFlowFilesArchiveArgs_ArchiveFormat", ApiGetFlowFilesArchiveArgs_ArchiveFormat_name, ApiGetFlowFilesArchiveArgs_ArchiveFormat_value)
	proto.RegisterEnum("ApiListFlowDescriptorsArgs_FlowType", ApiListFlowDescriptorsArgs_FlowType_name, ApiListFlowDescriptorsArgs_FlowType_value)
}

func init() { proto.RegisterFile("grr/proto/api/flow.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0xcf, 0x6f, 0x5b, 0x49,
	0x1d, 0xdf, 0x67, 0xe7, 0x87, 0x3d, 0x76, 0x9c, 0xec, 0xf4, 0x97, 0xdb, 0x6d, 0xd2, 0xe9, 0xdb,
	0x36, 0xc9, 0x2e, 0xcb, 0xeb, 0x2a, 0x94, 0xdd, 0x55, 0x17, 0x5a, 0xec, 0x38, 0x49, 0xbd, 0xa4,
	0x4e, 0xfa, 0x92, 0xaa, 0x68, 0x2f, 0xd6, 0xd8, 0x1e, 0xdb, 0x53, 0x3d, 0xbf, 0x31, 0x33, 0xe3,
	0x26, 0xd9, 0x33, 0x12, 0x08, 0x21, 0x40, 0x9c, 0x90, 0x90, 0xf8, 0x27, 0xb8, 0x70, 0x01, 0x2e,
	0x5c, 0xb9, 0x70, 0xe3, 0xc0, 0x05, 0xc4, 0x5f, 0x80, 0xc4, 0x89, 0x03, 0x9a, 0xef, 0xcc, 0x7b,
	0xb6, 0xdb, 0x26, 0x80, 0x14, 0x14, 0x21, 0xe8, 0xa5, 0xcf, 0xf3, 0x9d, 0xcf, 0x67, 0xbe, 0xf3,
	0xfd, 0x35, 0x33, 0xdf, 0xa0, 0x72, 0x4f, 0xca, 0x7b, 0x43, 0x29, 0xb4, 0xb8, 0x47, 0x87, 0xfc,
	0x5e, 0x37, 0x12, 0x47, 0x01, 0xfc, 0xbc, 0x71, 0xbd, 0x27, 0x44, 0x2f, 0x62, 0x56, 0xd8, 0x1a,
	0x75, 0xef, 0xd1, 0xf8, 0xc4, 0x89, 0x6e, 0x4f, 0x83, 0xc4, 0x48, 0x0f, 0x47, 0xba, 0x39, 0x8c,
	0x46, 0x3d, 0x1e, 0xbb, 0x29, 0x2b, 0xd3, 0x53, 0x24, 0xeb, 0x46, 0xac, 0xad, 0xb9, 0x88, 0x53,
	0xf6, 0x49, 0x79, 0x73, 0xa4, 0x79, 0xa4, 0x9c, 0xe8, 0xf2, 0x58, 0xf4, 0x42, 0xb4, 0x92, 0xd1,
	0x2b, 0xe3, 0x51, 0xa3, 0x64, 0x32, 0xbc, 0x3c, 0x1e, 0x7e, 0x93, 0x1a, 0x13, 0xdb, 0x53, 0x6c,
	0x40, 0x63, 0xcd, 0xdb, 0x56, 0xe2, 0xff, 0x25, 0x8b, 0xde, 0xae, 0x0c, 0xf9, 0x76, 0x24, 0x8e,
	0x6a, 0x4c, 0xb5, 0x25, 0x1f, 0x6a, 0x21, 0xf1, 0xa7, 0x68, 0x26, 0xa6, 0x03, 0x56, 0xf6, 0x88,
	0xb7, 0x9e, 0xaf, 0xae, 0xfd, 0xe9, 0xef, 0x7f, 0xfe, 0xad, 0x77, 0x1b, 0xdf, 0x32, 0xb3, 0x88,
	0x11, 0x10, 0xaa, 0x88, 0x64, 0x3d, 0xae, 0x34, 0x93, 0xac, 0x43, 0x78, 0x4c, 0x76, 0xc2, 0x30,
	0x08, 0x01, 0x84, 0xbf, 0x81, 0x16, 0xba, 0x92, 0xb3, 0xb8, 0x13, 0x9d, 0x34, 0x81, 0x25, 0x03,
	0x2c, 0xef, 0x00, 0xcb, 0x15, 0x7c, 0x69, 0xdb, 0x09, 0x49, 0x37, 0xa1, 0x0b, 0xc2, 0x62, 0x82,
	0x68, 0x18, 0x86, 0x0d, 0x94, 0x6b, 0x53, 0xcd, 0x7a, 0x42, 0x9e, 0x94, 0xb3, 0x00, 0xbe, 0x0a,
	0xe0, 0x25, 0x5c, 0x02, 0x15, 0x12, 0x61, 0x10, 0xa6, 0xf3, 0xf0, 0x7d, 0x94, 0xed, 0x88, 0x76,
	0x79, 0x06, 0xa6, 0xfb, 0x30, 0xfd, 0x26, 0xbe, 0x01, 0xd3, 0x3b, 0xa2, 0x3d, 0x1a, 0xb0, 0x58,
	0x53, 0x63, 0x78, 0xa2, 0xb4, 0xe4, 0x71, 0x2f, 0x08, 0xcd, 0x74, 0xfc, 0x10, 0xe5, 0xa9, 0xec,
	0xa9, 0xa6, 0x3e, 0x19, 0xb2, 0xf2, 0x2c, 0x60, 0x6f, 0x03, 0xf6, 0x1d, 0x7c, 0x1d, 0xb0, 0x54,
	0xf6, 0x00, 0xab, 0x88, 0x99, 0xe2, 0xb4, 0xcd, 0x19, 0xcc, 0xe1, 0xc9, 0x90, 0xe1, 0x01, 0x2a,
	0x76, 0x58, 0x97, 0x8e, 0x22, 0xdd, 0x34, 0x63, 0xe5, 0x39, 0xe2, 0xad, 0x17, 0x36, 0x2e, 0x07,
	0x36, 0x68, 0x82, 0x24, 0x68, 0x82, 0x4a, 0x7c, 0x52, 0xbd, 0x0f, 0xc4, 0x01, 0xbe, 0x56, 0xb3,
	0x08, 0xbb, 0xff, 0x74, 0x81, 0xe0, 0xfd, 0x4b, 0x3b, 0x4c, 0x3b, 0x59, 0x45, 0xf6, 0xd4, 0x66,
	0x44, 0x95, 0x0a, 0x0b, 0x9d, 0xf1, 0x08, 0xfe, 0x04, 0xa1, 0x16, 0xeb, 0xd3, 0x97, 0x5c, 0x8c,
	0xa4, 0x2a, 0xcf, 0x93, 0xec, 0x7a, 0xbe, 0x5a, 0x06, 0x5a, 0x8c, 0x97, 0x40, 0xdf, 0xb1, 0x38,
	0x08, 0x27, 0xe6, 0xfa, 0x3f, 0x9a, 0x47, 0xf3, 0xce, 0xcf, 0x38, 0x40, 0xd9, 0x91, 0x8c, 0x9d,
	0x73, 0x6f, 0x02, 0xfc, 0x2a, 0xca, 0x1f, 0x30, 0xa5, 0xb8, 0x88, 0xeb, 0x35, 0x9c, 0x07, 0xa6,
	0x67, 0x61, 0x23, 0x08, 0xcd, 0x44, 0x7c, 0x1f, 0xcd, 0x1b, 0x55, 0x9b, 0xbc, 0x53, 0x2e, 0x4e,
	0xba, 0x12, 0xe5, 0x1d, 0x63, 0xbd, 0x83, 0x73, 0x80, 0xe1, 0x9d, 0x20, 0x9c, 0xeb, 0xda, 0x91,
	0x55, 0x17, 0x43, 0xd6, 0xfb, 0x18, 0x20, 0x45, 0x8c, 0xb6, 0xc7, 0x4e, 0xb7, 0xe1, 0xb2, 0x87,
	0x66, 0xc0, 0x74, 0xd9, 0x33, 0x4c, 0x77, 0x17, 0xd0, 0xb7, 0xf0, 0xe2, 0xf6, 0x2b, 0x26, 0x2b,
	0xee, 0xb0, 0x09, 0x5b, 0x01, 0x11, 0xde, 0x47, 0x05, 0x39, 0x8a, 0x63, 0x26, 0xad, 0x4b, 0x66,
	0x80, 0x77, 0x31, 0x30, 0xd0, 0x10, 0xc6, 0x0d, 0xa0, 0xba, 0x02, 0x94, 0x65, 0x7c, 0x15, 0x28,
	0x2d, 0x60, 0x82, 0x39, 0x44, 0x32, 0x9d, 0x8b, 0x2b, 0x68, 0x56, 0x69, 0xaa, 0x6d, 0x84, 0x94,
	0x36, 0x4a, 0x81, 0xdb, 0x77, 0x70, 0x60, 0x46, 0xc7, 0x91, 0xbd, 0x39, 0x92, 0x92, 0xc5, 0xce,
	0xb1, 0x80, 0x08, 0x42, 0x8b, 0xc4, 0x9f, 0x21, 0xa4, 0x34, 0x95, 0x9a, 0x75, 0x9a, 0x54, 0x43,
	0x98, 0xcc, 0x54, 0xbf, 0x04, 0xb8, 0xbb, 0xa8, 0x10, 0xd6, 0xb6, 0x6b, 0x54, 0x33, 0xcd, 0x07,
	0x0c, 0x5f, 0x7d, 0xde, 0x67, 0xb1, 0x65, 0x38, 0xa2, 0x8a, 0xb4, 0x25, 0xa3, 0x9a, 0x75, 0x82,
	0x30, 0xef, 0xe0, 0x15, 0x8d, 0x9f, 0xa1, 0x52, 0x44, 0x95, 0x6e, 0xd2, 0xb6, 0xe6, 0x2f, 0x99,
	0xe1, 0x9b, 0x07, 0xbe, 0x7b, 0xc0, 0xf7, 0xde, 0x34, 0xdf, 0x8d, 0x69, 0x3e, 0x03, 0x24, 0x16,
	0x18, 0x84, 0x45, 0xf3, 0xab, 0x02, 0x3f, 0x2a, 0x1a, 0x7f, 0x8c, 0xe6, 0x61, 0x35, 0x21, 0xcb,
	0x39, 0xf0, 0xd9, 0x32, 0xf0, 0x5d, 0xc3, 0x57, 0x9e, 0xf7, 0x05, 0x71, 0xcb, 0x13, 0xdd, 0x67,
	0xc0, 0x16, 0x84, 0xc9, 0x6c, 0xbc, 0x07, 0x7b, 0xd3, 0xac, 0xd9, 0xa1, 0x9a, 0x96, 0x11, 0xd8,
	0x1b, 0x6c, 0x54, 0xa3, 0x9a, 0xee, 0xb5, 0x5e, 0xb0, 0xb6, 0xae, 0x12, 0xe0, 0xba, 0x81, 0xcb,
	0xaf, 0xdb, 0x88, 0x18, 0x98, 0xdd, 0xa0, 0x66, 0x06, 0x82, 0xb7, 0xd0, 0x7c, 0x5b, 0xc4, 0x9a,
	0x1d, 0xeb, 0x72, 0x01, 0xd8, 0x8a, 0xe0, 0xbd, 0x4d, 0x3b, 0x36, 0xd6, 0x6b, 0x8a, 0xcb, 0x21,
	0x8c, 0x5e, 0xf6, 0x0b, 0x3f, 0x47, 0xc5, 0x98, 0x29, 0x63, 0x72, 0x28, 0x95, 0xe5, 0x3c, 0xc9,
	0xae, 0x17, 0x36, 0x72, 0x89, 0xf7, 0xaa, 0xef, 0x03, 0xcf, 0x1d, 0xec, 0x37, 0x60, 0x16, 0xd0,
	0xa8, 0x74, 0xa3, 0xad, 0x13, 0xa2, 0xfb, 0x5c, 0xb9, 0xcd, 0x16, 0x2c, 0x93, 0xc1, 0x29, 0x7f,
	0x13, 0xcd, 0x82, 0xe7, 0x71, 0x01, 0xcd, 0x87, 0xcf, 0x1a, 0x8d, 0x7a, 0x63, 0x67, 0xe9, 0x2d,
	0x5c, 0x42, 0xe8, 0x70, 0x2b, 0x7c, 0x52, 0x6f, 0x54, 0x0e, 0xb7, 0x6a, 0x4b, 0x1e, 0xce, 0xa3,
	0xd9, 0xad, 0x30, 0xdc, 0x0b, 0x97, 0xb2, 0x18, 0xa3, 0xd2, 0xe6, 0x6e, 0x7d, 0xab, 0x71, 0xd8,
	0xdc, 0x0c, 0x2b, 0x07, 0x8f, 0xb7, 0x6a, 0x4b, 0x33, 0xfe, 0x0f, 0x3d, 0x54, 0x72, 0x9a, 0x84,
	0xec, 0xdb, 0x23, 0xa6, 0x34, 0x5e, 0x46, 0x48, 0xda, 0x4f, 0x93, 0x6b, 0x90, 0x9f, 0x61, 0xde,
	0x8d, 0xd4, 0x3b, 0x78, 0x03, 0x2d, 0x24, 0x62, 0x1b, 0x8e, 0x19, 0x30, 0xce, 0x42, 0xe0, 0xf0,
	0xa0, 0x53, 0x58, 0x94, 0x13, 0xbf, 0xf0, 0x7b, 0x28, 0x2f, 0x99, 0x1a, 0x8a, 0x58, 0x31, 0x93,
	0x62, 0xc6, 0x00, 0x85, 0x60, 0x47, 0xca, 0x27, 0x4c, 0x29, 0xda, 0x63, 0xe1, 0x58, 0xea, 0xff,
	0x3c, 0x83, 0x16, 0x52, 0x85, 0xd4, 0x28, 0xd2, 0xf8, 0x5b, 0x68, 0x7e, 0x48, 0x4f, 0x22, 0x41,
	0xad, 0x32, 0xa7, 0x65, 0xe7, 0x3a, 0xd8, 0xd1, 0xc7, 0x8b, 0x16, 0x46, 0x1c, 0x26, 0x78, 0x7f,
	0x71, 0x87, 0xe9, 0x7d, 0xfb, 0xc3, 0x26, 0x68, 0x42, 0x87, 0x1f, 0xa1, 0xa2, 0xfb, 0xb4, 0xa5,
	0x37, 0x33, 0x59, 0x8b, 0xf0, 0x65, 0x53, 0x5b, 0x89, 0xe8, 0x42, 0xb0, 0x25, 0x6c, 0x61, 0xc1,
	0x7d, 0x41, 0xe1, 0x95, 0x28, 0x6f, 0xc2, 0x5b, 0x69, 0x3a, 0x18, 0x42, 0xe9, 0x98, 0xa9, 0x1e,
	0x02, 0xba, 0x31, 0x1d, 0xfe, 0x8f, 0x0e, 0x93, 0x59, 0x84, 0xc7, 0x1d, 0xde, 0xa6, 0x9a, 0xc7,
	0x3d, 0x72, 0x64, 0x72, 0x42, 0x5a, 0x6d, 0x4d, 0x56, 0x1c, 0x49, 0xae, 0x35, 0x8b, 0x89, 0x16,
	0xb0, 0xa4, 0x09, 0x48, 0xa2, 0xb4, 0x90, 0x2c, 0x08, 0xc7, 0xcb, 0xf8, 0xdf, 0xb1, 0x1e, 0xdb,
	0x61, 0xda, 0xd8, 0x08, 0x2a, 0xc3, 0xd7, 0x50, 0xbe, 0x1d, 0x71, 0x16, 0x8f, 0x1d, 0x56, 0xbd,
	0x05, 0x6a, 0x5c, 0x47, 0x85, 0xca, 0x90, 0x6f, 0x82, 0xac, 0xde, 0xc1, 0xc8, 0x7e, 0x41, 0x81,
	0xcc, 0xb5, 0x93, 0xd1, 0x89, 0xc2, 0x9a, 0xf9, 0x97, 0x0b, 0xab, 0x2f, 0xe0, 0xc4, 0xde, 0x84,
	0xc2, 0x70, 0x4e, 0x8a, 0xdc, 0x44, 0x33, 0x86, 0xdc, 0x05, 0x54, 0x9a, 0x21, 0x21, 0x8c, 0xfa,
	0xdf, 0xf5, 0xec, 0x8a, 0x34, 0x6e, 0xb3, 0xe8, 0x42, 0xb7, 0xfe, 0x83, 0x0c, 0xba, 0x56, 0x19,
	0xf2, 0x5d, 0xae, 0xf4, 0x44, 0xde, 0xa8, 0x8b, 0xd2, 0x07, 0x3f, 0x44, 0x73, 0xa2, 0xdb, 0x55,
	0x4c, 0x43, 0x08, 0x66, 0xab, 0xab, 0x00, 0x22, 0x78, 0xc5, 0x66, 0x82, 0x22, 0x5c, 0xb3, 0x81,
	0x2b, 0x29, 0x26, 0xee, 0xec, 0xe4, 0x20, 0x74, 0x28, 0xfc, 0x75, 0x34, 0xdb, 0x16, 0xa3, 0x58,
	0xc3, 0x21, 0x95, 0x1d, 0x5f, 0xb4, 0x9e, 0xd0, 0x63, 0x12, 0x8f, 0x06, 0x2d, 0x26, 0x4d, 0x16,
	0x48, 0x47, 0xa6, 0x05, 0xe9, 0x32, 0xdd, 0xee, 0x07, 0xa1, 0x45, 0xf9, 0x14, 0x5d, 0x7f, 0x83,
	0x35, 0x5c, 0xf2, 0xd6, 0xd0, 0x2c, 0xac, 0x5e, 0xf6, 0x20, 0xeb, 0x17, 0x83, 0xe9, 0x62, 0x33,
	0xae, 0xa2, 0x66, 0x70, 0xcd, 0xdc, 0xe7, 0x2c, 0x9c, 0x44, 0x5c, 0xe9, 0x20, 0xb4, 0x60, 0xff,
	0x6f, 0x19, 0x74, 0x75, 0x6a, 0x0d, 0x50, 0xe5, 0x7f, 0xd4, 0xe0, 0x98, 0xa3, 0xb9, 0x2e, 0x8f,
	0x34, 0x93, 0xee, 0xae, 0xf8, 0x14, 0xf0, 0xdf, 0xc4, 0xf5, 0x90, 0xe9, 0x91, 0x8c, 0x89, 0x88,
	0xa3, 0x93, 0x14, 0x7d, 0xd4, 0x17, 0x8a, 0xb9, 0xeb, 0x26, 0x91, 0x6c, 0x28, 0x99, 0x4a, 0x2f,
	0xa1, 0xe6, 0x88, 0xa2, 0x3c, 0x56, 0xa4, 0xc7, 0x5f, 0xb2, 0x98, 0xa8, 0x51, 0x2b, 0xb9, 0x96,
	0xba, 0x05, 0xfc, 0x9f, 0x79, 0xa8, 0xfc, 0xba, 0xe1, 0x9d, 0x6f, 0x1f, 0x4d, 0xfb, 0xb6, 0x14,
	0x4c, 0xd5, 0xed, 0xea, 0x75, 0x50, 0xeb, 0x12, 0x7e, 0xfb, 0xd0, 0x1d, 0xd6, 0x89, 0x4e, 0x89,
	0x5b, 0xf1, 0x43, 0x54, 0xd0, 0x42, 0xd3, 0xa8, 0x69, 0xad, 0x91, 0x01, 0x6b, 0xa4, 0x11, 0x71,
	0x68, 0x44, 0x04, 0x44, 0xc6, 0x1c, 0x00, 0x09, 0x42, 0x04, 0x88, 0x4d, 0x88, 0xbc, 0xbf, 0x66,
	0xd0, 0xa5, 0x09, 0xed, 0x76, 0x45, 0xef, 0xff, 0x31, 0xf1, 0x9f, 0x8f, 0x89, 0x1f, 0x7b, 0xe8,
	0xca, 0x2b, 0x56, 0x77, 0x01, 0xf1, 0xf1, 0x74, 0x40, 0xe4, 0x02, 0x27, 0xaf, 0x5e, 0x03, 0x6d,
	0xde, 0xc6, 0x8b, 0x26, 0x14, 0xfa, 0xc6, 0xa1, 0x4c, 0x4a, 0x21, 0xd5, 0x79, 0x05, 0xc2, 0x4f,
	0x3d, 0xe4, 0x8f, 0xcf, 0x44, 0x67, 0xf1, 0xad, 0xe3, 0xa1, 0x90, 0x7a, 0x53, 0x0c, 0x06, 0x34,
	0xee, 0x5c, 0xd8, 0x61, 0xf1, 0x02, 0xdd, 0x39, 0x5b, 0x33, 0x67, 0xbb, 0xaa, 0xb9, 0x6d, 0xc2,
	0x80, 0xd3, 0x2c, 0xb9, 0xcf, 0x10, 0x3b, 0x9b, 0x38, 0x29, 0xe9, 0x0a, 0xf9, 0x4a, 0x36, 0x25,
	0x40, 0xff, 0x27, 0x1e, 0xba, 0x39, 0xe1, 0x99, 0x3d, 0x78, 0x83, 0xef, 0xc3, 0x13, 0xfc, 0xc2,
	0x12, 0xc3, 0x7f, 0x8c, 0x56, 0x4e, 0xd3, 0xc9, 0x6d, 0x7d, 0x35, 0x09, 0x9b, 0x0c, 0x84, 0xcd,
	0x92, 0xa9, 0x23, 0x93, 0xf3, 0x92, 0x53, 0xe0, 0xd7, 0x19, 0x74, 0xeb, 0x14, 0xaa, 0x0b, 0x4d,
	0xfd, 0x8f, 0x50, 0xde, 0xf6, 0x39, 0x0c, 0xce, 0x76, 0x0a, 0xd2, 0xda, 0x67, 0x95, 0x24, 0x56,
	0x6e, 0x57, 0xb3, 0xdf, 0xf5, 0x0e, 0xfe, 0x6a, 0x5a, 0x32, 0x66, 0xa6, 0x03, 0xde, 0xec, 0xe6,
	0xf4, 0x4a, 0xf1, 0x49, 0x52, 0x29, 0x66, 0x01, 0x95, 0x76, 0x19, 0xa6, 0x2b, 0x45, 0x24, 0x7a,
	0x84, 0xc5, 0x5a, 0x72, 0xa6, 0xd2, 0x93, 0xfa, 0x17, 0x1e, 0xba, 0x7d, 0x86, 0x01, 0x9d, 0x3b,
	0x1a, 0xd3, 0x59, 0xec, 0x07, 0x93, 0xf3, 0xaa, 0x54, 0xb7, 0xfb, 0xfb, 0x52, 0xb4, 0xcd, 0x3b,
	0x3d, 0xee, 0x99, 0xeb, 0xfd, 0x48, 0x55, 0x2f, 0x83, 0x0e, 0x25, 0x5c, 0xdc, 0x9d, 0x5a, 0xf5,
	0x7c, 0x92, 0xfb, 0x57, 0x99, 0x53, 0xb5, 0xde, 0x82, 0x2a, 0xf2, 0x5f, 0xe7, 0xf8, 0x8f, 0x5f,
	0x71, 0xbc, 0x53, 0x14, 0x5f, 0xb3, 0xfb, 0x39, 0xdd, 0xf5, 0x5f, 0x99, 0x76, 0x7d, 0x6a, 0xc4,
	0x69, 0xd7, 0xdb, 0xda, 0x9a, 0x7a, 0xfd, 0x97, 0x1e, 0x7a, 0xf7, 0x4c, 0xfb, 0x39, 0xbf, 0x3f,
	0xfd, 0xf7, 0xfd, 0x9e, 0xd6, 0x75, 0xa7, 0xf8, 0x79, 0xbb, 0xfe, 0x7b, 0x19, 0x74, 0x63, 0x5c,
	0x3d, 0xb7, 0x79, 0xc4, 0x54, 0x45, 0xb6, 0xfb, 0xfc, 0x25, 0xbb, 0x30, 0x9f, 0xef, 0xa3, 0x12,
	0xb5, 0x2a, 0x34, 0xbb, 0x42, 0x0e, 0xa8, 0x3d, 0xef, 0x4b, 0x1b, 0xef, 0x05, 0xa7, 0x2b, 0x1a,
	0xb8, 0xef, 0x6d, 0x00, 0x84, 0x0b, 0x74, 0xf2, 0xa7, 0x7f, 0x07, 0x2d, 0x4c, 0xc9, 0xf1, 0x3c,
	0xca, 0x7e, 0x5e, 0xdf, 0x5f, 0x7a, 0x0b, 0x23, 0x34, 0x77, 0x58, 0x09, 0x9b, 0x3b, 0x9f, 0x2f,
	0x79, 0xfe, 0xef, 0x3c, 0x30, 0x45, 0xe2, 0xc5, 0x71, 0x9b, 0xd4, 0x86, 0xff, 0xf7, 0x3d, 0x94,
	0x87, 0xdd, 0xc0, 0x43, 0xd6, 0x03, 0x95, 0xee, 0x04, 0xa7, 0x03, 0xe0, 0x68, 0x36, 0x6f, 0xd8,
	0xea, 0x0e, 0xec, 0xba, 0x82, 0x1f, 0xd5, 0xbb, 0x44, 0x0d, 0x59, 0x9b, 0x77, 0x39, 0xeb, 0x7c,
	0x40, 0x62, 0x2a, 0xa5, 0x38, 0x52, 0xf0, 0x12, 0x35, 0x77, 0xf1, 0xe4, 0x55, 0x6a, 0xaf, 0x05,
	0xda, 0x3d, 0x8d, 0x6d, 0xb3, 0xc2, 0x5c, 0x2e, 0x82, 0x30, 0xd7, 0x75, 0x94, 0xbe, 0x8f, 0x72,
	0x09, 0xbd, 0xd9, 0x83, 0x6d, 0x3a, 0xd8, 0xfd, 0xec, 0xec, 0xee, 0x55, 0x2b, 0xbb, 0x4b, 0x9e,
	0xff, 0x78, 0xea, 0xa8, 0x9a, 0xd0, 0xce, 0x45, 0xe3, 0xfa, 0x74, 0x34, 0xe2, 0xe0, 0xb5, 0xfe,
	0x70, 0x72, 0x2c, 0xfc, 0xc6, 0x43, 0x4b, 0x13, 0x54, 0xe7, 0x51, 0x0e, 0x3e, 0x4c, 0x13, 0xd4,
	0x86, 0x6c, 0xda, 0xdd, 0x3c, 0x38, 0x2d, 0x33, 0x3f, 0x4d, 0x32, 0xd3, 0xde, 0xfe, 0x92, 0x56,
	0xe1, 0xf2, 0x74, 0x66, 0x5a, 0x73, 0xbd, 0xf6, 0x82, 0xba, 0x8f, 0xf0, 0xe4, 0x06, 0x9c, 0x05,
	0x56, 0x5e, 0xbd, 0x4d, 0x25, 0xd7, 0x6b, 0xb7, 0xef, 0x3f, 0x78, 0x68, 0xd9, 0xc6, 0x9c, 0xbd,
	0x21, 0xd8, 0xbe, 0xd0, 0x45, 0xbf, 0x8d, 0x6a, 0xa8, 0xe0, 0x6a, 0x22, 0xf4, 0x5d, 0x6d, 0x55,
	0x7c, 0x17, 0x90, 0xcb, 0xf8, 0x9d, 0x7a, 0xac, 0x34, 0x35, 0xe9, 0x3e, 0x55, 0x1d, 0x6d, 0x23,
	0x16, 0xd9, 0x5f, 0x0d, 0x3a, 0x60, 0xfe, 0x1f, 0xb3, 0x70, 0xa1, 0x03, 0x73, 0x87, 0xa2, 0x25,
	0xb4, 0xc9, 0x2c, 0x93, 0x55, 0x7b, 0x43, 0x26, 0xe1, 0xa2, 0x0a, 0x1b, 0xfc, 0x0c, 0xe5, 0xfa,
	0x42, 0xe9, 0x89, 0xbf, 0x12, 0x04, 0xb0, 0xd2, 0x3a, 0x5e, 0x3d, 0xa4, 0xb2, 0xc7, 0x34, 0x31,
	0xe2, 0x80, 0x6c, 0xd2, 0x98, 0xb4, 0x18, 0xd9, 0x7e, 0x5a, 0x6b, 0x10, 0x21, 0x89, 0xdd, 0x22,
	0xa9, 0xd7, 0x82, 0x30, 0xc5, 0xe3, 0x5d, 0x34, 0x3b, 0xa4, 0xba, 0x6f, 0x6f, 0x21, 0xf9, 0xea,
	0x47, 0x40, 0xf4, 0x21, 0x2a, 0xed, 0x44, 0xa2, 0xb5, 0x75, 0x6c, 0xee, 0xc8, 0x8a, 0x8b, 0x18,
	0xaf, 0x6c, 0x1b, 0xd7, 0xd9, 0xa6, 0xdc, 0x44, 0xc9, 0x8d, 0x98, 0xeb, 0xd8, 0x5a, 0x12, 0xdc,
	0x45, 0x0b, 0x03, 0x7a, 0xdc, 0xec, 0xf2, 0x88, 0x35, 0x15, 0xff, 0xc2, 0x1a, 0x62, 0xe6, 0x41,
	0x6e, 0xe3, 0x43, 0xfb, 0xaf, 0xfa, 0x09, 0xf0, 0x6f, 0xa0, 0x5c, 0xf5, 0x44, 0xb3, 0x03, 0xfe,
	0x05, 0xc3, 0xab, 0x4f, 0xe8, 0x31, 0x1f, 0x8c, 0x06, 0xc4, 0xcc, 0x87, 0x68, 0xe1, 0x11, 0x23,
	0x47, 0x8c, 0x1c, 0xf1, 0x28, 0x22, 0x1d, 0x71, 0x14, 0xbb, 0x0e, 0xd4, 0x80, 0x1e, 0x1b, 0x5b,
	0x00, 0xa8, 0x85, 0xe6, 0x28, 0xfc, 0x29, 0x07, 0x8e, 0x92, 0xd2, 0x46, 0x39, 0x30, 0xa2, 0x6d,
	0x1e, 0x77, 0x98, 0xac, 0xd8, 0xbf, 0xf1, 0xd8, 0xff, 0x1e, 0xe4, 0x6a, 0x7b, 0xcf, 0x1b, 0xbb,
	0x7b, 0x95, 0xda, 0xf8, 0x69, 0x62, 0x25, 0x26, 0x1e, 0xe9, 0x70, 0x18, 0x9d, 0x40, 0x60, 0x8a,
	0x91, 0xb9, 0x63, 0x1a, 0x53, 0x87, 0x8e, 0x19, 0x3f, 0x45, 0x39, 0xb3, 0xa9, 0xf4, 0xaf, 0x13,
	0xa5, 0x0d, 0x1c, 0xec, 0x53, 0xdd, 0x3f, 0x18, 0xb2, 0x36, 0x7c, 0x98, 0x44, 0x7f, 0x90, 0xd9,
	0x3b, 0x18, 0x97, 0x76, 0x33, 0x6a, 0x8b, 0x84, 0x16, 0xa4, 0x17, 0x89, 0x16, 0xe1, 0xb1, 0x39,
	0x01, 0x1d, 0x8d, 0x7f, 0x04, 0xb7, 0xe2, 0x33, 0xdc, 0xeb, 0x72, 0x60, 0x0f, 0x15, 0x45, 0x32,
	0x34, 0x0e, 0xe2, 0x0f, 0x60, 0x99, 0x55, 0x7c, 0xc7, 0x3c, 0x27, 0x78, 0x27, 0xe9, 0xd1, 0xad,
	0x19, 0x87, 0x83, 0xea, 0x6b, 0x24, 0x45, 0x05, 0x61, 0x21, 0xfd, 0xae, 0x77, 0xfc, 0x63, 0x74,
	0xd7, 0xe6, 0xcc, 0x9b, 0x97, 0x85, 0x76, 0x25, 0x84, 0xd6, 0xb9, 0xaf, 0xfc, 0x7b, 0x0f, 0xad,
	0xfd, 0xd3, 0xa5, 0xdd, 0xb6, 0x9f, 0x25, 0xad, 0x7e, 0xef, 0x8d, 0xad, 0x7e, 0xd7, 0x62, 0xc7,
	0x6b, 0x46, 0x0b, 0xdb, 0xbd, 0x3e, 0x5b, 0x11, 0xd7, 0xfe, 0xdf, 0x47, 0x45, 0xfb, 0x68, 0x98,
	0x38, 0x8f, 0x67, 0xaa, 0x5f, 0x06, 0xb6, 0x35, 0x7c, 0xb7, 0x31, 0xae, 0x53, 0x86, 0xc1, 0xc5,
	0x82, 0x79, 0x73, 0x24, 0xc1, 0xc7, 0x4c, 0xf8, 0x59, 0x0a, 0x38, 0xa0, 0xff, 0x11, 0x00, 0x00,
	0xff, 0xff, 0x9d, 0x25, 0xcc, 0x15, 0xb2, 0x1c, 0x00, 0x00,
}
